/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the org.jetbrains.kotlin.jvm Plugin to add support for Kotlin.
    id 'org.jetbrains.kotlin.jvm' version '1.4.32'

    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'

    id 'org.jetbrains.dokka' version '1.6.0'

    id 'java'
}

group 'it.greengers.PotNetCore'
version '1.0'
sourceCompatibility = 11

compileKotlin {
    kotlinOptions.jvmTarget = "11"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "11"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    flatDir {   dirs '../unibolibs', '../klibs'	 }
}

dependencies {
    // Align versions of all Kotlin components
    implementation platform('org.jetbrains.kotlin:kotlin-bom')

    // Use the Kotlin JDK 8 standard library.
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1-jre'

    // Use the Kotlin test library.
    testImplementation 'org.jetbrains.kotlin:kotlin-test'

    // Use the Kotlin JUnit integration.
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'

    //QAK
    compile name: 'it.unibo.qakactor-2.4'

    //POT CONNECTORS
    compile name: 'PotConnectors-1.5'

    //KTOR
    // https://mvnrepository.com/artifact/io.ktor/ktor-network
    implementation group: 'io.ktor', name: 'ktor-network', version: '1.6.5'
    implementation group: 'io.ktor', name: 'ktor-client-websockets', version: '1.6.5'
    implementation group: 'io.ktor', name: 'ktor-client-okhttp', version: '1.6.5'

    //OKHTTP
    // https://mvnrepository.com/artifact/com.squareup.okhttp3/okhttp
    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.9.3'

    //LOGGING
    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-api-kotlin
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api-kotlin', version: '1.1.0'
    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-api
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.14.1'
    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.14.1'
    // https://mvnrepository.com/artifact/org.jetbrains.kotlin/kotlin-reflect
    runtimeOnly group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: '1.6.0'

    //GSON
    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.9'

    //DOKKA
    dokkaHtmlPlugin("org.jetbrains.dokka:kotlin-as-java-plugin:1.6.0")
}

application {
    // Define the main class for the application.
    mainClass = 'it.greengers.potnetcore.PotNetCoreApplKt'
}

jar {
    archivesBaseName = archivesBaseName + '-' + version
}

distZip {
    into("$baseName-$version/bin") {
        from '.'
        include 'data/*'
        include 'python/*'
    }
}

task copyDistToBin {
    copy {
        from 'build/distributions'
        into "../LastBuilds"
    }
}
